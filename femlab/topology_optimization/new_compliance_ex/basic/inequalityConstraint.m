function [Operators] = inequalityConstraint()
Operators.value=@(state,control,index)value(state,control,index);
Operators.evaluate=@(state,control,index)evaluate(state,control,index);
Operators.gradient=@(state,control,index)gradient(state,control,index);
end
% Evaluate inequality constraint residual
function [output] = value(state,control,index)
n = 9;
output = n/2;
end
% Evaluate inequality constraint
function [output] = evaluate(state,control,index)
switch index
    case 1
        P = [1.0000 0.5625 0.4167 0.3438 0.3000 0.2708 0.2500 0.2344 0.2222;
             0.5625 1.2500 0.6875 0.5000 0.4062 0.3500 0.3125 0.2857 0.2656;
             0.4167 0.6875 1.5000 0.8125 0.5833 0.4688 0.4000 0.3542 0.3214;
             0.3438 0.5000 0.8125 1.7500 0.9375 0.6667 0.5312 0.4500 0.3958;
             0.3000 0.4062 0.5833 0.9375 2.0000 1.0625 0.7500 0.5938 0.5000;
             0.2708 0.3500 0.4688 0.6667 1.0625 2.2500 1.1875 0.8333 0.6562;
             0.2500 0.3125 0.4000 0.5312 0.7500 1.1875 2.5000 1.3125 0.9167;
             0.2344 0.2857 0.3542 0.4500 0.5938 0.8333 1.3125 2.7500 1.4375;
             0.2222 0.2656 0.3214 0.3958 0.5000 0.6562 0.9167 1.4375 3.0000];
        P = (1/log(9)).*P;
        output = -1.*(control'*P*control);
    case 2
        Q = [3.0000 1.4375 0.9167 0.6562 0.5000 0.3958 0.3214 0.2656 0.2222;
             1.4375 2.7500 1.3125 0.8333 0.5938 0.4500 0.3542 0.2857 0.2344;
             0.9167 1.3125 2.5000 1.1875 0.7500 0.5312 0.4000 0.3125 0.2500;
             0.6562 0.8333 1.1875 2.2500 1.0625 0.6667 0.4688 0.3500 0.2708;
             0.5000 0.5938 0.7500 1.0625 2.0000 0.9375 0.5833 0.4062 0.3000;
             0.3958 0.4500 0.5312 0.6667 0.9375 1.7500 0.8125 0.5000 0.3438;
             0.3214 0.3542 0.4000 0.4688 0.5833 0.8125 1.5000 0.6875 0.4167;
             0.2656 0.2857 0.3125 0.3500 0.4062 0.5000 0.6875 1.2500 0.5625;
             0.2222 0.2344 0.2500 0.2708 0.3000 0.3438 0.4167 0.5625 1.0000];
        Q = (1/log(9)).*Q;
        output = -1.*(control'*Q*control);
end
end
% Compute inequality constraint gradient
function [output] = gradient(state,control,index)
switch index
    case 1
        P = [1.0000 0.5625 0.4167 0.3438 0.3000 0.2708 0.2500 0.2344 0.2222;
             0.5625 1.2500 0.6875 0.5000 0.4062 0.3500 0.3125 0.2857 0.2656;
             0.4167 0.6875 1.5000 0.8125 0.5833 0.4688 0.4000 0.3542 0.3214;
             0.3438 0.5000 0.8125 1.7500 0.9375 0.6667 0.5312 0.4500 0.3958;
             0.3000 0.4062 0.5833 0.9375 2.0000 1.0625 0.7500 0.5938 0.5000;
             0.2708 0.3500 0.4688 0.6667 1.0625 2.2500 1.1875 0.8333 0.6562;
             0.2500 0.3125 0.4000 0.5312 0.7500 1.1875 2.5000 1.3125 0.9167;
             0.2344 0.2857 0.3542 0.4500 0.5938 0.8333 1.3125 2.7500 1.4375;
             0.2222 0.2656 0.3214 0.3958 0.5000 0.6562 0.9167 1.4375 3.0000];
        P = (1/log(9)).*P;
        output = 2.*(P*control);
    case 2
        Q = [3.0000 1.4375 0.9167 0.6562 0.5000 0.3958 0.3214 0.2656 0.2222;
             1.4375 2.7500 1.3125 0.8333 0.5938 0.4500 0.3542 0.2857 0.2344;
             0.9167 1.3125 2.5000 1.1875 0.7500 0.5312 0.4000 0.3125 0.2500;
             0.6562 0.8333 1.1875 2.2500 1.0625 0.6667 0.4688 0.3500 0.2708;
             0.5000 0.5938 0.7500 1.0625 2.0000 0.9375 0.5833 0.4062 0.3000;
             0.3958 0.4500 0.5312 0.6667 0.9375 1.7500 0.8125 0.5000 0.3438;
             0.3214 0.3542 0.4000 0.4688 0.5833 0.8125 1.5000 0.6875 0.4167;
             0.2656 0.2857 0.3125 0.3500 0.4062 0.5000 0.6875 1.2500 0.5625;
             0.2222 0.2344 0.2500 0.2708 0.3000 0.3438 0.4167 0.5625 1.0000];
        Q = (1/log(9)).*Q;
        output = 2.*(Q*control);
end
end